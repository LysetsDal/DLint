{

module DLexer

open FSharp.Text.Lexing
open DParser

let lexemeAsString lexbuf = 
    LexBuffer<char>.LexemeString lexbuf


let keyword s = 
    match s with 
    | "char"    -> CHAR
    | "image"   -> IMG
    | _         -> NAME s


}

rule Token = parse
    | [' ' '\t' '\r'] { Token lexbuf }
    | '\n'            { lexbuf.EndPos <- lexbuf.EndPos.NextLine; Token lexbuf }
    | ['a'-'z''A'-'Z']['a'-'z''A'-'Z''0'-'9']*
                      { keyword (lexemeAsString lexbuf) }
    | 